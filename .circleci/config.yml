version: 2.1

parameters:
  workflow:
    type: enum
    default: auto
    description: The workflow to trigger.
    enum: [auto, manual]

executors:
  docker:
    docker:
      - image: cimg/base:stable

jobs:
  hadolint:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Checking amd64 docker file code quality
          command: docker run --rm -i ghcr.io/hadolint/hadolint:latest < Dockerfile-amd64 || true
      - run:
          name: Checking arm64 docker file code quality
          command: docker run --rm -i ghcr.io/hadolint/hadolint:latest < Dockerfile-arm64 || true
  build-wordpress:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Login to docker hub
          command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin $DOCKER_REGISTRY
      - run:
          name: Build and push wordpress images
          command: |
            apt update
            apt install -qy golang-go
            go install chainguard.dev/apko@latest
            apko publish --sbom=false build/debug.yaml $DOCKER_REGISTRY/$REGISTRY_USER/wordpress:debug $DOCKER_REGISTRY/$REGISTRY_USER/wordpress:$IMAGE_VERSION-debug
            apko build --sbom=false build/wordpress.yaml $DOCKER_REGISTRY/$REGISTRY_USER/wordpress:devel wordpress.tar
            docker import wordpress.tar $DOCKER_REGISTRY/$REGISTRY_USER/wordpress:devel
            docker buildx build --push --tag $DOCKER_REGISTRY/$REGISTRY_USER/wordpress:latest --tag $DOCKER_REGISTRY/$REGISTRY_USER/wordpress:$IMAGE_VERSION --platform linux/amd64,linux/arm64 -f Dockerfile .

workflows:
  version: 2
  build-image-auto:
    when: { equal: [ auto, << pipeline.parameters.workflow >> ] }
    jobs:
      - hadolint
  build-image-manual:
    when: { equal: [ manual, << pipeline.parameters.workflow >> ] }
    jobs:
      - hadolint
      - build-wordpress:
          requires:
            - hadolint
